select(-createdate) %>%
filter(!(
h_geocode %in% zip_blocks$GEOID10 &
w_geocode %in% zip_blocks$GEOID10
)) %>%
mutate(
direction = ifelse(
h_geocode %in% zip_blocks$GEOID10,
"outbound",
"inbound"
)
) %>%
select(h_geocode, w_geocode, S000, direction, year)
atherton_inbound <- readRDS("atherton_inbound.rds")
atherton_outbound <- readRDS("atherton_outbound.rds")
all_zip_outbound <- full_zip_od_clean %>%
filter(direction == "outbound") %>%
left_join(blocks %>% select(w_geocode = GEOID10)) %>%
st_as_sf() %>%
mutate(cbg = as.character(substr(h_geocode, 1, 12)))
all_zip_inbound <- full_zip_od_clean %>%
filter(direction == "inbound") %>%
left_join(blocks %>% select(h_geocode = GEOID10)) %>%
st_as_sf() %>%
mutate(cbg = as.character(substr(h_geocode, 1, 12)))
travel_time_mode_outbound <- readRDS("travel_time_mode_outbound.rds")
atherton_trips_outbound <-
all_zip_outbound %>%
cbind(
atherton_outbound %>%
st_drop_geometry()
) %>%
mutate(
time = case_when(
duration < 10 ~ "Less than 10 minutes",
duration < 15 ~ "10 to 14 minutes",
duration < 20 ~ "15 to 19 minutes",
duration < 25 ~ "20 to 24 minutes",
duration < 30 ~ "25 to 29 minutes",
duration < 35 ~ "30 to 34 minutes",
duration < 45 ~ "35 to 44 minutes",
duration < 60 ~ "45 to 59 minutes",
TRUE ~ "60 or more minutes"
)
) %>%
left_join(
travel_time_mode_outbound %>%
select(
cbg = cbg,
time,
perc_veh1,
perc_veh2,
perc_veh3
),
by = c("cbg", "time")
) %>%
mutate(
vehicles =
S000 * perc_veh1 +
S000 * perc_veh2 / 2 +
S000 * perc_veh3 / 3,
vmt = vehicles * distance * 2
)
emfac <-
read_csv("EMFAC2021-EI-202xClass-BayAreaAQMD-2022-Summer-20220203075721.csv", skip = 8) %>%
transmute(
Category = `Vehicle Category`,
Fuel_Type = Fuel,
Percent_Trips = Trips/sum(Trips),
Percent_Miles = `Total VMT`/sum(`Total VMT`),
`MTCO2_Running_Exhaust` = CO2_RUNEX/`Total VMT`,
`MTCO2_Start_Exhaust` = CO2_STREX/Trips
)
emfac
atherton_outbound_trips_ghg <- atherton_trips_outbound %>%
select(year, S000,vmt) %>%
st_drop_geometry() %>%
filter(vmt!="NaN") %>%
group_by(year) %>%
summarize(S000 = sum(S000), vmt = sum(vmt)) %>%
mutate(totalvmt = 250*vmt, trips = S000*250) %>% #assumes 250 work trips per year (5 per week for 50 weeks)
select(-vmt, -S000)
ghg_calc <- 1:7 %>%
map_dfr(function(x){
emfac %>%
mutate(
trips = Percent_Trips * atherton_outbound_trips_ghg$trips[x],
vmt = Percent_Miles * atherton_outbound_trips_ghg$totalvmt[x],
ghg = vmt*MTCO2_Running_Exhaust + trips*MTCO2_Start_Exhaust*2,
year = x
)}) %>%
group_by(year) %>%
summarize(ghg = sum(ghg))
# need to calculate ghg per year somehow.
ghg_calc <- 1:7 %>%
map_dfr(function(x){
emfac %>%
mutate(
trips = Percent_Trips * atherton_outbound_trips_ghg$trips[x],
vmt = Percent_Miles * atherton_outbound_trips_ghg$totalvmt[x],
ghg = vmt*MTCO2_Running_Exhaust + trips*MTCO2_Start_Exhaust*2,
year = x
)}) %>%
group_by(year) %>%
summarize(ghg = sum(ghg)) %>%
select(-year) %>%
mutate(year = 2013:2019)
ghg_calc <- 1:7 %>%
map_dfr(function(x){
emfac %>%
mutate(
trips = Percent_Trips * atherton_outbound_trips_ghg$trips[x],
vmt = Percent_Miles * atherton_outbound_trips_ghg$totalvmt[x],
ghg = vmt*MTCO2_Running_Exhaust + trips*MTCO2_Start_Exhaust*2,
year = x
)}) %>%
group_by(year) %>%
summarize(outbound_ghg = sum(ghg)) %>%
select(-year) %>%
mutate(year = 2013:2019)
# Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
travel_time_mode_inbound <-
counties("CA", cb = T, progress_bar = F) %>%
pull(COUNTYFP) %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:", x),
vars = "group(B08134)"
)
}) %>%
mutate(
cbg =
paste0(state,county,tract,block_group)
) %>%
filter(cbg %in% all_zip_inbound$cbg) %>%
select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
label,
into = c(NA, NA, "total", "mode", "carpool", "time"),
sep = "!!"
) %>%
mutate(
mode = case_when(
total %in% c(
"Less than 10 minutes",
"10 to 14 minutes",
"15 to 19 minutes",
"20 to 24 minutes",
"25 to 29 minutes",
"30 to 34 minutes",
"35 to 44 minutes",
"45 to 59 minutes",
"60 or more minutes"
) ~ "Total",
mode == "Drove alone:" ~ mode,
carpool %in% c(
"In 2-person carpool:",
"In 3-or-more-person carpool:"
) ~ carpool
),
time = case_when(
mode == "Total" ~ total,
mode == "Drove alone:" ~ carpool,
mode == carpool ~ time
)
) %>%
filter(!is.na(time)) %>%
select(-total, -carpool) %>%
pivot_wider(
names_from = mode,
values_from = estimate
) %>%
mutate(
perc_veh1 = `Drove alone:`/Total,
perc_veh2 = `In 2-person carpool:`/Total,
perc_veh3 = `In 3-or-more-person carpool:`/Total
)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
travel_time_mode_inbound <-
counties("CA", cb = T, progress_bar = F) %>%
pull(COUNTYFP) %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:", x),
vars = "group(B08134)"
)
}) %>%
mutate(
cbg =
paste0(state,county,tract,block_group)
) %>%
filter(cbg %in% all_zip_inbound$cbg) %>%
select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
label,
into = c(NA, NA, "total", "mode", "carpool", "time"),
sep = "!!"
) %>%
mutate(
mode = case_when(
total %in% c(
"Less than 10 minutes",
"10 to 14 minutes",
"15 to 19 minutes",
"20 to 24 minutes",
"25 to 29 minutes",
"30 to 34 minutes",
"35 to 44 minutes",
"45 to 59 minutes",
"60 or more minutes"
) ~ "Total",
mode == "Drove alone:" ~ mode,
carpool %in% c(
"In 2-person carpool:",
"In 3-or-more-person carpool:"
) ~ carpool
),
time = case_when(
mode == "Total" ~ total,
mode == "Drove alone:" ~ carpool,
mode == carpool ~ time
)
) %>%
filter(!is.na(time)) %>%
select(-total, -carpool) %>%
pivot_wider(
names_from = mode,
values_from = estimate
) %>%
mutate(
perc_veh1 = `Drove alone:`/Total,
perc_veh2 = `In 2-person carpool:`/Total,
perc_veh3 = `In 3-or-more-person carpool:`/Total
)
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
travel_time_mode_inbound <-
counties("CA", cb = T, progress_bar = F) %>%
pull(COUNTYFP) %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group:*",
regionin = paste0("state:06+county:", x),
vars = "group(B08134)"
)
}) %>%
mutate(
cbg =
paste0(state,county,tract,block_group)
) %>%
filter(cbg %in% all_zip_inbound$cbg) %>%
select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
label,
into = c(NA, NA, "total", "mode", "carpool", "time"),
sep = "!!"
) %>%
mutate(
mode = case_when(
total %in% c(
"Less than 10 minutes",
"10 to 14 minutes",
"15 to 19 minutes",
"20 to 24 minutes",
"25 to 29 minutes",
"30 to 34 minutes",
"35 to 44 minutes",
"45 to 59 minutes",
"60 or more minutes"
) ~ "Total",
mode == "Drove alone:" ~ mode,
carpool %in% c(
"In 2-person carpool:",
"In 3-or-more-person carpool:"
) ~ carpool
),
time = case_when(
mode == "Total" ~ total,
mode == "Drove alone:" ~ carpool,
mode == carpool ~ time
)
) %>%
filter(!is.na(time)) %>%
select(-total, -carpool) %>%
pivot_wider(
names_from = mode,
values_from = estimate
) %>%
mutate(
perc_veh1 = `Drove alone:`/Total,
perc_veh2 = `In 2-person carpool:`/Total,
perc_veh3 = `In 3-or-more-person carpool:`/Total
)
saveRDS(travel_time_mode_inbound, "travel_time_mode_inbound.rds")
travel_time_mode_inbound <- readRDS(travel_time_mode_inbound)
travel_time_mode_inbound <- readRDS("travel_time_mode_inbound")
travel_time_mode_inbound <- readRDS("travel_time_mode_inbound.rds")
ghg_calc_outbound <- 1:7 %>%
map_dfr(function(x){
emfac %>%
mutate(
trips = Percent_Trips * atherton_outbound_trips_ghg$trips[x],
vmt = Percent_Miles * atherton_outbound_trips_ghg$totalvmt[x],
ghg = vmt*MTCO2_Running_Exhaust + trips*MTCO2_Start_Exhaust*2,
year = x
)}) %>%
group_by(year) %>%
summarize(outbound_ghg = sum(ghg)) %>%
select(-year) %>%
mutate(year = 2013:2019)
atherton_trips_inbound <-
all_zip_inbound %>%
cbind(
atherton_inbound %>%
st_drop_geometry()
) %>%
mutate(
time = case_when(
duration < 10 ~ "Less than 10 minutes",
duration < 15 ~ "10 to 14 minutes",
duration < 20 ~ "15 to 19 minutes",
duration < 25 ~ "20 to 24 minutes",
duration < 30 ~ "25 to 29 minutes",
duration < 35 ~ "30 to 34 minutes",
duration < 45 ~ "35 to 44 minutes",
duration < 60 ~ "45 to 59 minutes",
TRUE ~ "60 or more minutes"
)
) %>%
left_join(
travel_time_mode_inbound %>%
select(
cbg = cbg,
time,
perc_veh1,
perc_veh2,
perc_veh3
),
by = c("cbg", "time")
) %>%
mutate(
vehicles =
S000 * perc_veh1 +
S000 * perc_veh2 / 2 +
S000 * perc_veh3 / 3,
vmt = vehicles * distance * 2
)
atherton_inbound_trips_ghg <- atherton_trips_inbound %>%
select(year, S000,vmt) %>%
st_drop_geometry() %>%
filter(vmt!="NaN") %>%
group_by(year) %>%
summarize(S000 = sum(S000), vmt = sum(vmt)) %>%
mutate(totalvmt = 250*vmt, trips = S000*250) %>% #assumes 250 work trips per year (5 per week for 50 weeks)
select(-vmt, -S000)
ghg_calc_inbound <- 1:7 %>%
map_dfr(function(x){
emfac %>%
mutate(
trips = Percent_Trips * atherton_inbound_trips_ghg$trips[x],
vmt = Percent_Miles * atherton_inbound_trips_ghg$totalvmt[x],
ghg = vmt*MTCO2_Running_Exhaust + trips*MTCO2_Start_Exhaust*2,
year = x
)}) %>%
group_by(year) %>%
summarize(inbound_ghg = sum(ghg)) %>%
select(-year) %>%
mutate(year = 2013:2019)
View(ghg_calc_inbound)
View(ghg_calc_outbound)
total_ghg_atherton <- ghg_calc_inbound %>%
cbind(ghg_calc_outbound$outbound_ghg)
View(total_ghg_atherton)
total_ghg_atherton <- ghg_calc_inbound %>%
cbind(outbound_ghg = ghg_calc_outbound$outbound_ghg)
(ghg_calc_outbound)
total_ghg_atherton <- ghg_calc_inbound %>%
left_join(ghg_calc_outbound)
total_ghg_atherton <- ghg_calc_inbound %>%
left_join(ghg_calc_outbound) %>%
.[, c(2,1,3)]
total_ghg_atherton <- ghg_calc_inbound %>%
left_join(ghg_calc_outbound) %>%
.[, c(2,1,3)] %>%
mutate(total_ghg = inbound_ghg + outbound_ghg)
full_zip_od <- readRDS("full_zip_od.rds")
full_zip_od_clean <- full_zip_od %>%
select(-createdate) %>%
filter(!(
h_geocode %in% zip_blocks$GEOID10 &
w_geocode %in% zip_blocks$GEOID10
)) %>%
mutate(
direction = ifelse(
h_geocode %in% zip_blocks$GEOID10,
"outbound",
"inbound"
)
)
#NEED TO COME UP WITH CREATIVE WAYS - for example duplicate trips over diff years, same trip reversed, etc
#removing "negligible" zip to zip trips,... check this later
full_zip_od_routing <- full_zip_od_clean %>%
mutate(
origin = ifelse(
direction == "inbound",
h_geocode,
w_geocode
),
cbg = origin %>% substr(1,12),
tract = origin %>% substr(1,11)
) %>% filter(!duplicated(tract))
ca_tracts <- tracts("CA")
zip_od_origin <- full_zip_od_routing %>%
select(tract) %>%
left_join(ca_tracts %>% select(tract = GEOID)) %>%
st_as_sf() %>%
st_centroid() %>%
st_coordinates()
zip_od_destination <-
zip %>%
st_centroid() %>%
st_coordinates()
zip_od_route <-
1:nrow(zip_od_origin) %>%
map_dfr(function(x){
tryCatch(
mb_directions(
origin = zip_od_origin[x, ],
destination = zip_od_destination,
profile = "driving-traffic"
) %>%
mutate(id = x),
error = function(e){
data.frame(id = x)
}
)
}) %>%
st_as_sf()
readRDS(zip_od_route, "zip_od_route.rds")
zip_od_route <- readRDS("zip_od_route.rds")
zip_od_destination <-
zip %>%
st_centroid() %>%
st_coordinates()
zip_od_route <- readRDS("zip_od_route.rds")
View(zip_od_route)
x <- seq(from = 0, to = nrow(zip_od_origin), by = 1000)
view(x)
y <- seq(from = 0, to = nrow(zip_od_origin), by = 1000)
zip_od_route <-
x %>%
map_dfr(function(y){
1:nrow(zip_od_origin) %>%
map_dfr(function(x){
tryCatch(
mb_directions(
origin = zip_od_origin[x, ],
destination = zip_od_destination,
profile = "driving-traffic"
) %>%
mutate(id = x),
error = function(e){
data.frame(id = x)
}
)
})
saveRDS(paste0(y,".rds"))
})
